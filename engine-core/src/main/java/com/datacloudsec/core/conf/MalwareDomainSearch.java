package com.datacloudsec.core.conf;

import org.apache.commons.collections.CollectionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Collections;
import java.util.List;
import java.util.Map;

/**
 * Created by liqiang on 2017/8/18.
 */
public class MalwareDomainSearch {
    private static final Logger logger = LoggerFactory.getLogger(MalwareDomainSearch.class);

    private static List<MalwareDomain> allMalwareDomain = Collections.emptyList();
    private static Map<String, MalwareDomain> malwareDomainMap = Collections.emptyMap();

    public static void initMalwareDomain(List<MalwareDomain> allMalwareDomain) {
        if (allMalwareDomain == null) {
            logger.error("malware domain list is null, please check!");
            allMalwareDomain = Collections.emptyList();
            malwareDomainMap = Collections.emptyMap();
            return;
        }

        MalwareDomainSearch.allMalwareDomain = allMalwareDomain;
        MalwareDomainSearch.updateInnerMapping();
    }

    private synchronized static void updateInnerMapping() {
        if(CollectionUtils.isEmpty(MalwareDomainSearch.allMalwareDomain)) {
            logger.info("malware domain list is empty, will auto clear inner mapping!");
            malwareDomainMap = Collections.emptyMap();
        } else {
            malwareDomainMap = allMalwareDomain.stream()
                    .collect(java.util.stream.Collectors.toMap(MalwareDomain::getDomain, e -> e));
        }
    }

    public static MalwareDomain getMalwareDomainByDomain(String domain) {
        return  malwareDomainMap.get(domain);
    }
}
