package com.datacloudsec.core.conf;

import com.datacloudsec.config.tools.IPv4Kit;
import com.datacloudsec.config.tools.StrKit;

import java.io.Serializable;

/**
 * MalwareIP
 */
public class MalwareIP implements Serializable {

    private long startIp;

    private long endIp;

    private String malipClass;

    private String maldnsClass;

    public MalwareIP() {
        this.startIp = 0;
        this.endIp = 0;
        this.maldnsClass = "";
        this.maldnsClass = "";
    }

    public MalwareIP(long startIp, long endIp) {
        this.startIp = startIp;
        this.endIp = endIp;
        this.maldnsClass = "";
        this.maldnsClass = "";
    }

    public long getStartIp() {
        return startIp;
    }

    public long getEndIp() {
        return endIp;
    }

    public void setStartIp(long startIp) {
        this.startIp = startIp;
    }

    public void setEndIp(long endIp) {
        this.endIp = endIp;
    }

    public String getMalipClass() {
        return malipClass;
    }

    public void setMalipClass(String malipClass) {
        this.malipClass = malipClass;
    }

    public String getMaldnsClass() {
        return maldnsClass;
    }

    public void setMaldnsClass(String maldnsClass) {
        this.maldnsClass = maldnsClass;
    }

    /**
     * 根据IP字符串构建对象，支持单个IP或区间IP，如192.168.101.100,192.168.101.1-192.168.101.9
     *
     * @param ipString ipString
     * @return MalwareIP
     */
    public static MalwareIP build(String ipString) {
        if (StrKit.has(ipString, '-')) {
            String[] ips = StrKit.split(ipString, '-');
            long startIp = IPv4Kit.ip2long(ips[0]);
            long endIp = IPv4Kit.ip2long(ips[1]);
            return new MalwareIP(startIp, endIp);
        } else {
            long ip = IPv4Kit.ip2long(ipString);
            return new MalwareIP(ip, ip);
        }
    }
}
