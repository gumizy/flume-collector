package com.datacloudsec.core.conf;

import org.apache.commons.collections.CollectionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Collections;
import java.util.List;
import java.util.Map;

/**
 * Created by liqiang on 2017/8/21.
 */
public class MalwareCodeSearch {
    private static final Logger logger = LoggerFactory.getLogger(MalwareCodeSearch.class);
    private static List<MalwareCode> allMalwareCode = Collections.emptyList();
    private static Map<String, MalwareCode> malwareCodeMap = Collections.emptyMap();

    public static void initMalwareCode(List<MalwareCode> allMalwareCode) {
        if (allMalwareCode == null) {
            logger.error("malware code list is null, please check!");
            allMalwareCode = Collections.emptyList();
            malwareCodeMap = Collections.emptyMap();
            return;
        }

        MalwareCodeSearch.allMalwareCode = allMalwareCode;
        MalwareCodeSearch.updateInnerMapping();
    }

    private synchronized static void updateInnerMapping() {
        if(CollectionUtils.isEmpty(MalwareCodeSearch.allMalwareCode)) {
            logger.info("malware code list is empty, will auto clear inner mapping!");
            malwareCodeMap = Collections.emptyMap();
        } else {
            malwareCodeMap = allMalwareCode.stream()
                    .collect(java.util.stream.Collectors.toMap(MalwareCode::getCodeHash, e -> e));
        }
    }

    public static MalwareCode getMalwareCodeByHash(String codeHash) {
        return  malwareCodeMap.get(codeHash);
    }
}
